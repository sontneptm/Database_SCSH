#자리 테이블
CREATE TABLE seats
(
	seat_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	seat_master INT,
	seat_empty VARCHAR(1),
	seat_first_order TIME
);

# 기본 자리 (12석) 세팅
INSERT INTO seats VALUES ('1','1',NULL);
INSERT INTO seats VALUES ('2','2',NULL);
INSERT INTO seats VALUES ('3','3',NULL);
INSERT INTO seats VALUES ('4','4',NULL);
INSERT INTO seats VALUES ('5','5',NULL);
INSERT INTO seats VALUES ('6','6',NULL);
INSERT INTO seats VALUES ('7','7',NULL);
INSERT INTO seats VALUES ('8','8',NULL);
INSERT INTO seats VALUES ('9','9',NULL);
INSERT INTO seats VALUES ('10','10',NULL);
INSERT INTO seats VALUES ('11','11',NULL);
INSERT INTO seats VALUES ('12','12',NULL);
DELETE FROM seats WHERE seat_id > 12;

# 자리 추가 쿼리


#메뉴 테이블
CREATE TABLE menus
(
	menu_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	menu_name VARCHAR(50) NOT NULL,
	menu_price INT NOT NULL,
	menu_stock INT
);

#기본 메뉴
INSERT INTO menus VALUES ('1','삼겹살',7000,0);
INSERT INTO menus VALUES ('2','항정살',9000,0);
INSERT INTO menus VALUES ('3','공기밥',1000,0);
INSERT INTO menus VALUES ('4','양념갈비',8000,0);
INSERT INTO menus VALUES ('5','참이슬',4500,0);

#재고 업데이트 쿼리
UPDATE menus SET menu_stock = menu_stock - 2
WHERE menu_name = '삼겹살';

#메뉴 추가 쿼리
INSERT INTO menus VALUES (NULL,'처음처럼',4500,0);

#주문 테이블
CREATE TABLE orders
(
	seat_id INT,
	menu_id INT,
	FOREIGN KEY (seat_id) REFERENCES seats(seat_id),
	FOREIGN KEY (menu_id) REFERENCES menus(menu_id),
	PRIMARY KEY (seat_id, menu_id),
	order_quantity INT
);

# 주문 추가 쿼리
INSERT INTO orders VALUES (2,(SELECT menu_id FROM menus WHERE menu_name = '양념갈비'),1);


# 주문 확인 쿼리
SELECT s.seat_id, m.menu_name, o.order_quantity, 
((SELECT menu_price FROM menus WHERE menu_id = o.menu_id)*o.order_quantity) AS 가격
FROM seats AS s INNER JOIN menus AS m ON s.seat_id = '3' 
NATURAL JOIN orders AS o;

#주문 결제 (총계) 확인 쿼리
SELECT s.seat_id, SUM(((SELECT menu_price FROM menus WHERE menu_id = o.menu_id)*o.order_quantity)) AS 총계
FROM seats AS s INNER JOIN menus AS m ON s.seat_id = (SELECT seat_master FROM seats WHERE seat_id = 3)
NATURAL JOIN orders AS o
GROUP BY s.seat_id;

# 멤버쉽 등급 테이블
CREATE TABLE membership_grade
(
	grade_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	grade_name VARCHAR(20) NOT NULL,
	grade_discount_percent INT NOT NULL DEFAULT 1,
	grade_point_percent INT NOT NULL DEFAULT 5
);

INSERT INTO membership_grade VALUES ('1','normal',1,5);
INSERT INTO membership_grade VALUES ('2','silver',1,7);
INSERT INTO membership_grade VALUES ('3','gold',3,7);
INSERT INTO membership_grade VALUES ('4','diamond',5,10);
INSERT INTO membership_grade VALUES ('5','vip',10,10);


#멤버쉽 정보 테이블
CREATE TABLE membership
(
	member_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	member_name VARCHAR(10) NOT NULL,
	member_gender VARCHAR(10) NOT NULL,
	member_phone VARCHAR(20),
	member_address VARCHAR(100),
	member_total_pay INT NOT NULL DEFAULT 0,
	member_point INT NOT NULL DEFAULT 0,
	grade_id INT NOT NULL DEFAULT 1,
	FOREIGN KEY(grade_id) REFERENCES membership_grade(grade_id)
);

#멤버쉽 가입 쿼리
INSERT INTO membership VALUES
(NULL,'박상경','남성','010-5566-8822','안산',DEFAULT,DEFAULT,DEFAULT);

#멤버쉽 확인 쿼리
SELECT m.member_name, m.member_phone, m.member_point, mg.grade_name FROM membership AS m INNER JOIN membership_grade AS mg ON m.member_name = '정승민' AND m.grade_id = mg.grade_id;

#결제 정보 테이블
CREATE TABLE payments
(
	payment_id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	payment_amount INT NOT NULL,
	payment_date DATE
);

#결제 처리 테이블
INSERT INTO payments VALUES
(NULL,80000,'2018-8-20');











































